"""empty message

Revision ID: 31a133f5e181
Revises: None
Create Date: 2023-08-27 17:50:31.548989

"""

# revision identifiers, used by Alembic.
revision = '31a133f5e181'
down_revision = None

from alembic import op
import sqlalchemy as sa
import sqlmodel


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exons',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('ensembl_exon', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start', sa.Integer(), nullable=False),
    sa.Column('end', sa.Integer(), nullable=False),
    sa.Column('cds', sa.Boolean(), nullable=False),
    sa.Column('start_codon', sa.Integer(), nullable=True),
    sa.Column('stop_codon', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ensembl_exon')
    )
    op.create_index(op.f('ix_exons_cds'), 'exons', ['cds'], unique=False)
    op.create_index(op.f('ix_exons_end'), 'exons', ['end'], unique=False)
    op.create_index(op.f('ix_exons_ensembl_exon'), 'exons', ['ensembl_exon'], unique=False)
    op.create_index(op.f('ix_exons_id'), 'exons', ['id'], unique=False)
    op.create_index(op.f('ix_exons_start'), 'exons', ['start'], unique=False)
    op.create_index(op.f('ix_exons_start_codon'), 'exons', ['start_codon'], unique=False)
    op.create_index(op.f('ix_exons_stop_codon'), 'exons', ['stop_codon'], unique=False)
    op.create_table('genomes',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('organism', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_genomes_id'), 'genomes', ['id'], unique=False)
    op.create_index(op.f('ix_genomes_name'), 'genomes', ['name'], unique=False)
    op.create_index(op.f('ix_genomes_organism'), 'genomes', ['organism'], unique=False)
    op.create_index(op.f('ix_genomes_version'), 'genomes', ['version'], unique=False)
    op.create_table('genes',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('ensembl_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ensembl_version_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('entrez_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('chr', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('strand', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start', sa.Integer(), nullable=False),
    sa.Column('end', sa.Integer(), nullable=False),
    sa.Column('genome_id', sa.Integer(), nullable=False),
    sa.CheckConstraint("strand in ('+', '-')"),
    sa.ForeignKeyConstraint(['genome_id'], ['genomes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ensembl_version_id')
    )
    op.create_index(op.f('ix_genes_chr'), 'genes', ['chr'], unique=False)
    op.create_index(op.f('ix_genes_description'), 'genes', ['description'], unique=False)
    op.create_index(op.f('ix_genes_end'), 'genes', ['end'], unique=False)
    op.create_index(op.f('ix_genes_ensembl_id'), 'genes', ['ensembl_id'], unique=False)
    op.create_index(op.f('ix_genes_ensembl_version_id'), 'genes', ['ensembl_version_id'], unique=False)
    op.create_index(op.f('ix_genes_entrez_id'), 'genes', ['entrez_id'], unique=False)
    op.create_index(op.f('ix_genes_genome_id'), 'genes', ['genome_id'], unique=False)
    op.create_index(op.f('ix_genes_id'), 'genes', ['id'], unique=False)
    op.create_index(op.f('ix_genes_name'), 'genes', ['name'], unique=False)
    op.create_index(op.f('ix_genes_start'), 'genes', ['start'], unique=False)
    op.create_index(op.f('ix_genes_strand'), 'genes', ['strand'], unique=False)
    op.create_table('trpanels',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('method', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('genome_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['genome_id'], ['genomes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trpanels_genome_id'), 'trpanels', ['genome_id'], unique=False)
    op.create_index(op.f('ix_trpanels_id'), 'trpanels', ['id'], unique=False)
    op.create_index(op.f('ix_trpanels_method'), 'trpanels', ['method'], unique=False)
    op.create_index(op.f('ix_trpanels_name'), 'trpanels', ['name'], unique=False)
    op.create_table('cohorts',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('trpanel_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['trpanel_id'], ['trpanels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cohorts_id'), 'cohorts', ['id'], unique=False)
    op.create_index(op.f('ix_cohorts_name'), 'cohorts', ['name'], unique=False)
    op.create_index(op.f('ix_cohorts_trpanel_id'), 'cohorts', ['trpanel_id'], unique=False)
    op.create_table('repeats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('chr', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('msa', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('motif', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('start', sa.Integer(), nullable=False),
    sa.Column('end', sa.Integer(), nullable=False),
    sa.Column('l_effective', sa.Integer(), nullable=False),
    sa.Column('n_effective', sa.Integer(), nullable=False),
    sa.Column('region_length', sa.Integer(), nullable=False),
    sa.Column('score_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('p_value', sa.Float(), nullable=False),
    sa.Column('divergence', sa.Float(), nullable=False),
    sa.Column('trpanel_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['trpanel_id'], ['trpanels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_repeats_chr'), 'repeats', ['chr'], unique=False)
    op.create_index(op.f('ix_repeats_divergence'), 'repeats', ['divergence'], unique=False)
    op.create_index(op.f('ix_repeats_end'), 'repeats', ['end'], unique=False)
    op.create_index(op.f('ix_repeats_id'), 'repeats', ['id'], unique=False)
    op.create_index(op.f('ix_repeats_l_effective'), 'repeats', ['l_effective'], unique=False)
    op.create_index(op.f('ix_repeats_motif'), 'repeats', ['motif'], unique=False)
    op.create_index(op.f('ix_repeats_msa'), 'repeats', ['msa'], unique=False)
    op.create_index(op.f('ix_repeats_n_effective'), 'repeats', ['n_effective'], unique=False)
    op.create_index(op.f('ix_repeats_p_value'), 'repeats', ['p_value'], unique=False)
    op.create_index(op.f('ix_repeats_region_length'), 'repeats', ['region_length'], unique=False)
    op.create_index(op.f('ix_repeats_score'), 'repeats', ['score'], unique=False)
    op.create_index(op.f('ix_repeats_score_type'), 'repeats', ['score_type'], unique=False)
    op.create_index(op.f('ix_repeats_source'), 'repeats', ['source'], unique=False)
    op.create_index(op.f('ix_repeats_start'), 'repeats', ['start'], unique=False)
    op.create_index(op.f('ix_repeats_trpanel_id'), 'repeats', ['trpanel_id'], unique=False)
    op.create_table('transcripts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ensembl_transcript', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start', sa.Integer(), nullable=False),
    sa.Column('end', sa.Integer(), nullable=False),
    sa.Column('gene_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gene_id'], ['genes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ensembl_transcript')
    )
    op.create_index(op.f('ix_transcripts_end'), 'transcripts', ['end'], unique=False)
    op.create_index(op.f('ix_transcripts_ensembl_transcript'), 'transcripts', ['ensembl_transcript'], unique=False)
    op.create_index(op.f('ix_transcripts_gene_id'), 'transcripts', ['gene_id'], unique=False)
    op.create_index(op.f('ix_transcripts_id'), 'transcripts', ['id'], unique=False)
    op.create_index(op.f('ix_transcripts_start'), 'transcripts', ['start'], unique=False)
    op.create_table('allele_frequencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('population', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('n_effective', sa.Integer(), nullable=False),
    sa.Column('frequency', sa.Float(), nullable=False),
    sa.Column('het', sa.Float(), nullable=True),
    sa.Column('num_called', sa.Integer(), nullable=True),
    sa.Column('repeat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['repeat_id'], ['repeats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_allele_frequencies_frequency'), 'allele_frequencies', ['frequency'], unique=False)
    op.create_index(op.f('ix_allele_frequencies_het'), 'allele_frequencies', ['het'], unique=False)
    op.create_index(op.f('ix_allele_frequencies_id'), 'allele_frequencies', ['id'], unique=False)
    op.create_index(op.f('ix_allele_frequencies_n_effective'), 'allele_frequencies', ['n_effective'], unique=False)
    op.create_index(op.f('ix_allele_frequencies_num_called'), 'allele_frequencies', ['num_called'], unique=False)
    op.create_index(op.f('ix_allele_frequencies_population'), 'allele_frequencies', ['population'], unique=False)
    op.create_index(op.f('ix_allele_frequencies_repeat_id'), 'allele_frequencies', ['repeat_id'], unique=False)
    op.create_table('crcvariations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instable_calls', sa.Integer(), nullable=True),
    sa.Column('stable_calls', sa.Integer(), nullable=True),
    sa.Column('total_calls', sa.Integer(), nullable=True),
    sa.Column('frac_variable', sa.Float(), nullable=True),
    sa.Column('avg_size_diff', sa.Float(), nullable=True),
    sa.Column('repeat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['repeat_id'], ['repeats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crcvariations_avg_size_diff'), 'crcvariations', ['avg_size_diff'], unique=False)
    op.create_index(op.f('ix_crcvariations_frac_variable'), 'crcvariations', ['frac_variable'], unique=False)
    op.create_index(op.f('ix_crcvariations_id'), 'crcvariations', ['id'], unique=False)
    op.create_index(op.f('ix_crcvariations_instable_calls'), 'crcvariations', ['instable_calls'], unique=False)
    op.create_index(op.f('ix_crcvariations_repeat_id'), 'crcvariations', ['repeat_id'], unique=False)
    op.create_index(op.f('ix_crcvariations_stable_calls'), 'crcvariations', ['stable_calls'], unique=False)
    op.create_index(op.f('ix_crcvariations_total_calls'), 'crcvariations', ['total_calls'], unique=False)
    op.create_table('exons_transcripts',
    sa.Column('exon_id', sa.Integer(), nullable=True),
    sa.Column('transcript_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exon_id'], ['exons.id'], ),
    sa.ForeignKeyConstraint(['transcript_id'], ['transcripts.id'], ),
    sa.PrimaryKeyConstraint('exon_id', 'transcript_id')
    )
    op.create_index(op.f('ix_exons_transcripts_exon_id'), 'exons_transcripts', ['exon_id'], unique=False)
    op.create_index(op.f('ix_exons_transcripts_transcript_id'), 'exons_transcripts', ['transcript_id'], unique=False)
    op.create_table('genes_repeats',
    sa.Column('repeat_id', sa.Integer(), nullable=True),
    sa.Column('gene_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gene_id'], ['genes.id'], ),
    sa.ForeignKeyConstraint(['repeat_id'], ['repeats.id'], ),
    sa.PrimaryKeyConstraint('repeat_id', 'gene_id')
    )
    op.create_index(op.f('ix_genes_repeats_gene_id'), 'genes_repeats', ['gene_id'], unique=False)
    op.create_index(op.f('ix_genes_repeats_repeat_id'), 'genes_repeats', ['repeat_id'], unique=False)
    op.create_table('repeats_transcripts',
    sa.Column('repeat_id', sa.Integer(), nullable=True),
    sa.Column('transcript_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['repeat_id'], ['repeats.id'], ),
    sa.ForeignKeyConstraint(['transcript_id'], ['transcripts.id'], ),
    sa.PrimaryKeyConstraint('repeat_id', 'transcript_id')
    )
    op.create_index(op.f('ix_repeats_transcripts_repeat_id'), 'repeats_transcripts', ['repeat_id'], unique=False)
    op.create_index(op.f('ix_repeats_transcripts_transcript_id'), 'repeats_transcripts', ['transcript_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_repeats_transcripts_transcript_id'), table_name='repeats_transcripts')
    op.drop_index(op.f('ix_repeats_transcripts_repeat_id'), table_name='repeats_transcripts')
    op.drop_table('repeats_transcripts')
    op.drop_index(op.f('ix_genes_repeats_repeat_id'), table_name='genes_repeats')
    op.drop_index(op.f('ix_genes_repeats_gene_id'), table_name='genes_repeats')
    op.drop_table('genes_repeats')
    op.drop_index(op.f('ix_exons_transcripts_transcript_id'), table_name='exons_transcripts')
    op.drop_index(op.f('ix_exons_transcripts_exon_id'), table_name='exons_transcripts')
    op.drop_table('exons_transcripts')
    op.drop_index(op.f('ix_crcvariations_total_calls'), table_name='crcvariations')
    op.drop_index(op.f('ix_crcvariations_stable_calls'), table_name='crcvariations')
    op.drop_index(op.f('ix_crcvariations_repeat_id'), table_name='crcvariations')
    op.drop_index(op.f('ix_crcvariations_instable_calls'), table_name='crcvariations')
    op.drop_index(op.f('ix_crcvariations_id'), table_name='crcvariations')
    op.drop_index(op.f('ix_crcvariations_frac_variable'), table_name='crcvariations')
    op.drop_index(op.f('ix_crcvariations_avg_size_diff'), table_name='crcvariations')
    op.drop_table('crcvariations')
    op.drop_index(op.f('ix_allele_frequencies_repeat_id'), table_name='allele_frequencies')
    op.drop_index(op.f('ix_allele_frequencies_population'), table_name='allele_frequencies')
    op.drop_index(op.f('ix_allele_frequencies_num_called'), table_name='allele_frequencies')
    op.drop_index(op.f('ix_allele_frequencies_n_effective'), table_name='allele_frequencies')
    op.drop_index(op.f('ix_allele_frequencies_id'), table_name='allele_frequencies')
    op.drop_index(op.f('ix_allele_frequencies_het'), table_name='allele_frequencies')
    op.drop_index(op.f('ix_allele_frequencies_frequency'), table_name='allele_frequencies')
    op.drop_table('allele_frequencies')
    op.drop_index(op.f('ix_transcripts_start'), table_name='transcripts')
    op.drop_index(op.f('ix_transcripts_id'), table_name='transcripts')
    op.drop_index(op.f('ix_transcripts_gene_id'), table_name='transcripts')
    op.drop_index(op.f('ix_transcripts_ensembl_transcript'), table_name='transcripts')
    op.drop_index(op.f('ix_transcripts_end'), table_name='transcripts')
    op.drop_table('transcripts')
    op.drop_index(op.f('ix_repeats_trpanel_id'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_start'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_source'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_score_type'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_score'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_region_length'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_p_value'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_n_effective'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_msa'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_motif'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_l_effective'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_id'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_end'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_divergence'), table_name='repeats')
    op.drop_index(op.f('ix_repeats_chr'), table_name='repeats')
    op.drop_table('repeats')
    op.drop_index(op.f('ix_cohorts_trpanel_id'), table_name='cohorts')
    op.drop_index(op.f('ix_cohorts_name'), table_name='cohorts')
    op.drop_index(op.f('ix_cohorts_id'), table_name='cohorts')
    op.drop_table('cohorts')
    op.drop_index(op.f('ix_trpanels_name'), table_name='trpanels')
    op.drop_index(op.f('ix_trpanels_method'), table_name='trpanels')
    op.drop_index(op.f('ix_trpanels_id'), table_name='trpanels')
    op.drop_index(op.f('ix_trpanels_genome_id'), table_name='trpanels')
    op.drop_table('trpanels')
    op.drop_index(op.f('ix_genes_strand'), table_name='genes')
    op.drop_index(op.f('ix_genes_start'), table_name='genes')
    op.drop_index(op.f('ix_genes_name'), table_name='genes')
    op.drop_index(op.f('ix_genes_id'), table_name='genes')
    op.drop_index(op.f('ix_genes_genome_id'), table_name='genes')
    op.drop_index(op.f('ix_genes_entrez_id'), table_name='genes')
    op.drop_index(op.f('ix_genes_ensembl_version_id'), table_name='genes')
    op.drop_index(op.f('ix_genes_ensembl_id'), table_name='genes')
    op.drop_index(op.f('ix_genes_end'), table_name='genes')
    op.drop_index(op.f('ix_genes_description'), table_name='genes')
    op.drop_index(op.f('ix_genes_chr'), table_name='genes')
    op.drop_table('genes')
    op.drop_index(op.f('ix_genomes_version'), table_name='genomes')
    op.drop_index(op.f('ix_genomes_organism'), table_name='genomes')
    op.drop_index(op.f('ix_genomes_name'), table_name='genomes')
    op.drop_index(op.f('ix_genomes_id'), table_name='genomes')
    op.drop_table('genomes')
    op.drop_index(op.f('ix_exons_stop_codon'), table_name='exons')
    op.drop_index(op.f('ix_exons_start_codon'), table_name='exons')
    op.drop_index(op.f('ix_exons_start'), table_name='exons')
    op.drop_index(op.f('ix_exons_id'), table_name='exons')
    op.drop_index(op.f('ix_exons_ensembl_exon'), table_name='exons')
    op.drop_index(op.f('ix_exons_end'), table_name='exons')
    op.drop_index(op.f('ix_exons_cds'), table_name='exons')
    op.drop_table('exons')
    # ### end Alembic commands ###